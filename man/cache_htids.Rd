% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsync_tools.R
\name{cache_htids}
\alias{cache_htids}
\title{Caches downloaded JSON Extracted Features files to another format}
\usage{
cache_htids(
  htids,
  dir = getOption("hathiTools.ef.dir"),
  cache_type = getOption("hathiTools.cachetype"),
  keep_json = TRUE
)
}
\arguments{
\item{htids}{A character vector of Hathi Trust ids, a workset created with
\link{workset_builder}, or a data frame with a column named "htid" containing
the Hathi Trust ids that require caching.}

\item{dir}{The directory where the download extracted features files are to
be found. Defaults to \code{getOption("hathiTools.ef.dir")}, which is just
"hathi-ef" on load.}

\item{cache_type}{Type of caching used. Defaults to
\code{getOption("hathiTools.cachetype")}, which is "csv.gz" on load. Allowed
cache types are: compressed csv (the default), "none" (no local caching of
JSON download; only JSON file kept), "rds", "feather" (suitable for use
with \link{arrow}; needs the \link{arrow} package installed), or "text2vec.csv" (a
csv suitable for use with the package
\href{https://cran.r-project.org/package=text2vec}{text2vec}).}

\item{keep_json}{Whether to keep the downloaded json files. Default is
\code{TRUE}; if false, it only keeps the local cached files (e.g., the csv
files) and deletes the associated JSON files. This can save space.}
}
\value{
A \link{tibble} with the paths of the cached files and an indicator of
whether each htid was successfully cached.
}
\description{
It is useful to run this function after running \link{rsync_from_hathi}; this way,
you can cache all your slow-to-load JSON Extracted Features files to a faster
to load format (e.g., \code{feather} or \code{csv}).
}
