% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_tools.R
\name{clear_cache}
\alias{clear_cache}
\title{Removes cached files for a set of Hathi Trust ids}
\usage{
clear_cache(
  htids,
  dir = getOption("hathiTools.ef.dir"),
  cache_type = c("ef", "meta", "pagemeta"),
  cache_format = c("csv.gz", "rds", "feather", "text2vec.csv", "parquet"),
  keep_json = TRUE
)
}
\arguments{
\item{htids}{A character vector of Hathi Trust ids, a workset created with
\link{workset_builder}, or a data frame with a column named "htid" containing
the Hathi Trust ids that require caching. If the JSON Extracted Features
files for these htids have not been downloaded via \link{rsync_from_hathi} or
\link{get_hathi_counts} to \code{dir}, nothing will be cached (unless \code{attempt_rsync}
is \code{TRUE}).}

\item{dir}{The directory where the download extracted features files are to
be found. Defaults to \code{getOption("hathiTools.ef.dir")}, which is just
"hathi-ef" on load.}

\item{cache_type}{Type of information to remove. The default is c("ef",
"meta", "pagemeta"), which refers to the extracted features, the volume
metadata, and the page metadata in \code{dir}. Omitting one of these removes
only the rest (e.g., cache_type = "ef" removes only the EF files, not their
associated metadata or page metadata).}

\item{cache_format}{The format of the cached EF files to remove. Defaults to
c("csv.gz", "rds", "feather", "text2vec.csv", "parquet"), i.e., all
formats.}

\item{keep_json}{Whether to keep any downloaded JSON files. Default is
\code{TRUE}; if \code{FALSE} will delete all JSON extracted features associated with
the set of htids.}
}
\value{
(Invisible) a character vector with the deleted paths.
}
\description{
Removes cached files for a set of Hathi Trust ids
}
\note{
Warning! This function does not double-check that you want to delete your
cache. It will go ahead and do it.
}
\examples{
\donttest{
dir <- tempdir()

htids <- c("mdp.39015008706338", "mdp.39015058109706")
dir <- tempdir()

cache_htids(htids, dir = dir, cache_type = "ef", attempt_rsync = TRUE)

# Clears only "csv" cache

deleted <- clear_cache(htids, dir = dir)
deleted

# Clears also JSON files

deleted <- clear_cache(htids, dir = dir, keep_json = FALSE)
deleted

}
}
